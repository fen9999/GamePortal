//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;


public class EventItemView : MonoBehaviour
{
	#region Unity Editor
	public UITexture texture;
	public UI2DSprite loadingSprite;
	#endregion
	[SerializeField]
	[HideInInspector]
	public EventModel model;
	private EventView eventView;
	public static List<EventItemView> List = new List<EventItemView>();
	#if UNITY_ANDROID || UNITY_IPHONE || UNITY_EDITOR
	void Awake(){
		CUIHandle.AddClick (gameObject.GetComponent<CUIHandle> (), OnChooseEvent);
	}
	void OnDestroy()
	{
		CUIHandle.RemoveClick (gameObject.GetComponent<CUIHandle> (), OnChooseEvent);
	}
	public static EventItemView Create(EventModel model,Transform parent,EventView eventView)
	{
		GameObject gobj = (GameObject)GameObject.Instantiate(Resources.Load("Prefabs/Event/EventItemView"));
		gobj.transform.parent = parent;
		gobj.transform.localPosition = Vector3.zero;
		gobj.transform.localScale = Vector3.one;
		EventItemView item = gobj.GetComponent<EventItemView> ();
		item.SetData (model,eventView);
		List.Add (item);
        gobj.transform.name=  "Event " + List.IndexOf(item);

        return item;
	}
	public void SetData(EventModel model,EventView eventView)
	{
		this.model = model;
		this.eventView = eventView;
		model.GetTexture (delegate(Texture txture) {
			loadingSprite.gameObject.SetActive(false);
			texture.mainTexture = txture;
		});
	}

	void OnChooseEvent (GameObject targetObject)
	{
		eventView.OnChooseEvent (model);
	}
	#endif
}


